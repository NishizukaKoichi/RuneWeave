name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

jobs:
  # Rust checks
  rust-format:
    name: Rust Format
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      
      - uses: actions-rust-lang/setup-rust-toolchain@1fbea72663f6d4c03efaab13560c8a24cfd2a7cc # v1.9.0
        with:
          toolchain: stable
          components: rustfmt
      
      - name: Check formatting
        run: cargo fmt --all -- --check

  rust-clippy:
    name: Rust Clippy
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      
      - uses: actions-rust-lang/setup-rust-toolchain@1fbea72663f6d4c03efaab13560c8a24cfd2a7cc # v1.9.0
        with:
          toolchain: stable
          components: clippy
          
      - name: Run clippy
        run: cargo clippy --all --all-features -- -D warnings

  rust-build:
    name: Rust Build
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      
      - uses: actions-rust-lang/setup-rust-toolchain@1fbea72663f6d4c03efaab13560c8a24cfd2a7cc # v1.9.0
        with:
          toolchain: stable
          targets: wasm32-unknown-unknown
          
      - name: Build native
        run: cargo build --all --release
        
      - name: Build WASM
        run: cargo build --target wasm32-unknown-unknown --release

  rust-test:
    name: Rust Tests
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      
      - uses: actions-rust-lang/setup-rust-toolchain@1fbea72663f6d4c03efaab13560c8a24cfd2a7cc # v1.9.0
        with:
          toolchain: stable
          
      - name: Run tests
        run: cargo test --all --all-features

  rust-security:
    name: Security Audit
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      
      - uses: actions-rust-lang/setup-rust-toolchain@1fbea72663f6d4c03efaab13560c8a24cfd2a7cc # v1.9.0
        with:
          toolchain: stable
          
      - uses: taiki-e/install-action@331a600f1b10a3fed8dc56f925012bede91ae51f # v2.44.15
        with:
          tool: cargo-audit
          
      - name: Run cargo audit
        run: cargo audit

  # Language matrix for generated projects
  test-generated-projects:
    name: Test Generated Projects
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        language: [rust, node, python, go, java]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      
      - uses: actions-rust-lang/setup-rust-toolchain@1fbea72663f6d4c03efaab13560c8a24cfd2a7cc # v1.9.0
        with:
          toolchain: stable
          
      - name: Build RuneWeave
        run: cargo build --release
        
      - name: Generate test project
        run: |
          ./target/release/runeweave apply -p examples/polyglot.json --seed 99 --out ./test-output
          
      - name: Setup Rust
        if: matrix.language == 'rust'
        uses: actions-rust-lang/setup-rust-toolchain@1fbea72663f6d4c03efaab13560c8a24cfd2a7cc # v1.9.0
        with:
          toolchain: stable
          
      - name: Setup Node
        if: matrix.language == 'node'
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.4
        with:
          node-version: '22.6.0'
          
      - name: Setup Python
        if: matrix.language == 'python'
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90ab5 # v5.3.0
        with:
          python-version: '3.12'
          
      - name: Setup Go
        if: matrix.language == 'go'
        uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5.1.0
        with:
          go-version: '1.22.5'
          
      - name: Setup Java
        if: matrix.language == 'java'
        uses: actions/setup-java@6a0805fcefea3d4657a47ac4c165951e33482018 # v4.5.0
        with:
          java-version: '21'
          distribution: 'temurin'
          
      - name: Verify generated project structure
        run: |
          case "${{ matrix.language }}" in
            rust)
              test -f test-output/services/api-rs/Cargo.toml
              test -f test-output/services/api-rs/src/main.rs
              ;;
            node)
              test -f test-output/services/api-ts/package.json
              test -f test-output/services/api-ts/src/index.ts
              ;;
            python)
              test -f test-output/services/job-py/pyproject.toml
              test -f test-output/services/job-py/src/main.py
              ;;
            go)
              test -f test-output/services/job-go/go.mod
              test -f test-output/services/job-go/main.go
              ;;
            java)
              test -f test-output/services/api-java/pom.xml
              test -f test-output/services/api-java/src/main/java/com/example/Application.java
              ;;
          esac

  # E2E tests (excluding musl target as requested)
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      
      - uses: actions-rust-lang/setup-rust-toolchain@1fbea72663f6d4c03efaab13560c8a24cfd2a7cc # v1.9.0
        with:
          toolchain: stable
          
      - name: Build release binary
        run: cargo build --release
        
      - name: Run E2E tests
        run: |
          # Test basic functionality
          ./target/release/runeweave verify -p examples/simple.json
          ./target/release/runeweave verify -p examples/polyglot.json
          
          # Test actual scaffolding
          ./target/release/runeweave apply -p examples/simple.json --seed 42 --out ./e2e-simple
          ./target/release/runeweave apply -p examples/polyglot.json --seed 99 --out ./e2e-polyglot
          
          # Verify deterministic generation
          ./target/release/runeweave apply -p examples/simple.json --seed 42 --out ./e2e-simple-2
          diff -r ./e2e-simple ./e2e-simple-2
          
  # All checks must pass
  ci-success:
    name: CI Success
    needs: [rust-format, rust-clippy, rust-build, rust-test, rust-security, test-generated-projects, e2e-tests]
    runs-on: ubuntu-24.04
    steps:
      - name: CI passed
        run: echo "All CI checks passed!"